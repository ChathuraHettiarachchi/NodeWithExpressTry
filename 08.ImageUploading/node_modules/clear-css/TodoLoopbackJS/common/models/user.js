var config = require('../../server/config.json');
var path = require('path');

module.exports = function(user) {
  user.forgotPassword = function(email, cb) {
    user.findOne({where: {email: email}}, function(err, user) {
      if(user) {
        var url = 'http://' + config.host + ':' + config.port + '/reset-password';
        console.log(url);
            //Not working accessToken.id
        var html = 'Click <a href="' + url + '?access_token=' +
        user.accessToken + '">here</a> to reset your password';
        console.log(html);
        user.app.models.Email.send({
          to: user.email,
          from: user.email,
          subject: 'Password reset',
          html: html
        }, function(err) {
          if (err) return console.log('> error sending password reset email');
          console.log('> sending password reset email to:', user.email);
        });
        cb(err, user);
      }
      else {
        var errNotFound = new Error('user not found');
        errNotFound.statusCode = 404;
        errNotFound.code = 'user_NOT_FOUND';

        cb(errNotFound, user);
      }
    });
  };


  user.remoteMethod(
    'forgotPassword',
    {
      accepts: [
        {
          arg: 'email',
          type: 'string'
        }
      ],
      returns: {
        arg: 'customer',
        type: 'object'
      },
      http: {
        source: 'query'
      }
    }
  );

  console.log(user);
  //send verification email after registration
  user.afterRemote('create', function(context, user, next) {
    console.log('> user.afterRemote triggered');

    var options = {
      type: 'email',
      to: user.email,
      from: 'noreply@loopback.com',
      subject: 'Thanks for registering.',
      template: path.resolve(__dirname, '../../server/views/verify.ejs'),
      redirect: 'localhost:9000',
      user: user
    };
    console.log(options);
    user.verify(options, function(err, response) {
      //if (err) return next(err);

      console.log('> verification email sent:', response);

      context.res.render('response', {
        title: 'Signed up successfully',
        //content: 'Please check your email and click on the verification link ' +
        //    'before logging in.',
        content: 'Please logging in',
        redirectTo: '/',
        redirectToLinkText: 'Log in'
      });
    });
  });

  //send password reset link when requested
  user.on('resetPasswordRequest', function(info) {
    var url = 'http://' + config.host + ':' + config.port + '/reset-password';
    //Not working accessToken.id
    var html = 'Click <a href="' + url + '?access_token=' +
        info.accessToken.id + '">here</a> to reset your password';

    user.app.models.Email.send({
      to: info.email,
      from: info.email,
      subject: 'Password reset',
      html: html
    }, function(err) {
      if (err) return console.log('> error sending password reset email');
      console.log('> sending password reset email to:', info.email);
    });
  });
};
